---
# Copyright 2018 Google Inc. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{%- set zones         = properties["zones"] %}
{%- set num_nodes     = properties["nodes"] %}
{%- set nodes         = range(num_nodes) %}
{%- set name_stub     = properties["name-stub"] %}
{%- set vol_name      = properties["vol-name"] %}
{%- set brick_size    = properties["brick-size"] %}
{%- set replicas      = properties["replicas"] %}
{%- set arbiters      = properties["arbiters"] %}
{%- set mnt_pnt       = properties["mount-point"] %}
{%- set num_zones     = zones|length %}
{%- set startup_cfg   = env["deployment"] + "-startup-config" %}
{%- set vol_waiter    = env["deployment"] + "-vol-waiter" %}
{%- set brick_waiter  = env["deployment"] + "-brick-waiter" %}

# yamllint disable rule:line-length
resources:
  - name: {{ startup_cfg }}
    type: runtimeconfig.v1beta1.config
    properties:
      config: {{ startup_cfg }}
      description: "Runtime resources for coordination of GlusterFS cluster creation"

  - name: {{ vol_waiter }}
    type: runtimeconfig.v1beta1.waiter
    metadata:
      dependsOn:
        - {{ name_stub }}-0
    properties:
      parent: $(ref.{{ startup_cfg }}.name)
      waiter: {{ vol_waiter }}
      timeout: 300s
      success:
        cardinality:
          path: /deployment-success
          number: 1
      failure:
        cardinality:
          path: /deployment-failure
          number: 1

{%- for n in nodes %}
  {%- set zone = zones[n % num_zones] %}
  - name: {{ name_stub }}-{{ n }}-brick
    type: compute.v1.disk
    properties:
      zone: {{ zone }}
      sizeGb: {{ brick_size }}
      type: zones/{{ zone }}/diskTypes/pd-ssd
{%- endfor %}

{%- for n in nodes %}
  {%- set zone = zones[n % num_zones] %}
  - name: {{ name_stub }}-{{ n }}
    type: compute.v1.instance
    properties:
      zone: {{ zone }}
      machineType: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/zones/{{ zone }}/machineTypes/{{ properties["type"] }}
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            diskName: {{ name_stub }}-{{ n }}-boot
            sourceImage: https://www.googleapis.com/compute/v1/projects/{{ properties["image-project"] }}/global/images/{{ properties["image"] }}
        - deviceName: brick
          source: $(ref.{{ name_stub }}-{{ n }}-brick.selfLink)
          type: PERSISTENT
          boot: false
          autoDelete: false
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/default
      serviceAccounts:
        - email: "default"
          scopes:
            - "https://www.googleapis.com/auth/cloud-platform"
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash

              dnf -y upgrade && dnf config-manager --add-repo https://download.gluster.org/pub/gluster/glusterfs/LATEST/CentOS/glusterfs-rhel8.repo && \
                  dnf -y install mc psmisc wget curl glibc-langpack-ru glusterfs-rdma glusterfs-fuse glusterfs glusterfs-server glusterfs-geo-replication glusterfs-cloudsync-plugins && \
                  dnf -y clean all || exit 1

              firewall-cmd --add-service=glusterfs --permanent && firewall-cmd --reload || exit 1
              systemctl restart glusterd.service || exit 1
              systemctl enable glusterd.service || exit 1

              pvcreate /dev/sdb && \
              vgcreate vg /dev/sdb && \
              lvcreate -L 50G -T vg/thinpool && \
              lvcreate -V 50G -T vg/thinpool -n lv && \
              mkfs.xfs /dev/vg/lv && \
              mkdir -p {{ mnt_pnt }} && \
              mount /dev/vg/lv {{ mnt_pnt }} && \
              mkdir -p {{ mnt_pnt }}/brick && \
              echo "/dev/vg/lv {{ mnt_pnt }}/brick xfs defaults 0 0"  >> /etc/fstab || exit 1

              gcloud beta runtime-config configs variables set brick-completed/{{ name_stub }}-{{ n }} \
                     "TRUE" --config-name {{ startup_cfg }} --is-text || exit 1

              echo 'Removing metadata key startup-script to prevent script re-running on subsequent boots...'
              gcloud compute instances remove-metadata {{ name_stub }}-{{ n }} --zone={{ zone }} --keys=startup-script

              if [ $? -ne 0 ]; then
                echo "Metadata removal failed. Aborting deployment..."
                gcloud beta runtime-config configs variables set deployment-failure/{{ name_stub }}-{{ n }} \
                       "TRUE" --config-name {{ startup_cfg }} --is-text && \
                exit 1
              fi

              {%- if n is equalto 0 %}
              gcloud beta runtime-config configs waiters create {{ brick_waiter }} \
                       --config-name {{ startup_cfg }} \
                       --success-cardinality-path brick-completed \
                       --success-cardinality-number {{ num_nodes }} --timeout 600

              if [ $? -ne 0 ]; then
               echo "ERROR! One or more bricks failed to configure properly or waiter timed out. Aborting deployment..."
               gcloud beta runtime-config configs variables set deployment-failure/{{ name_stub }}-{{ n }} \
                      "TRUE" --config-name {{ startup_cfg }} --is-text && \
               exit 1
              fi

              {% for x in nodes %}gluster peer probe {{ name_stub }}-{{ x }}
              {% endfor %}

              gluster volume create {{ vol_name }} replica {{ replicas }} {% for x in nodes %}{{ name_stub }}-{{ x }}:{{ mnt_pnt }}/brick {% endfor %} && \
              gluster volume start {{ vol_name }}

              if [ $? -ne 0 ]; then
                echo "Creation of Gluster volume {{ vol_name }} failed. Aborting deployment..."
                gcloud beta runtime-config configs variables set deployment-failure/{{ name_stub }}-{{ n }} \
                       "TRUE" --config-name {{ startup_cfg }} --is-text && \
                exit 1
              fi

              gcloud beta runtime-config configs variables set deployment-success/{{ name_stub }}-{{ n }} \
                     "TRUE" --config-name {{ startup_cfg }} --is-text
              {%- endif %}
  {%- endfor %}
